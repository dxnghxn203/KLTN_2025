name: Build and Deploy Vault

on:
  push:
    paths:
      - '.github/workflows/build-vault.yml'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/vault-kltn2025
  VAULT_DIR: ./vault
  CONTAINER_NAME: vault-kltn2025-container

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log execution info
        run: |
          echo "Workflow triggered by: ${{ github.actor }}"
          echo "Current time: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Running in repository: ${{ github.repository }}"

      # Bước 1: Build Vault Docker Image
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.VAULT_DIR }}
          file: ${{ env.VAULT_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Bước 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Bước 3: Deploy Vault lên VPS
      - name: Deploy Vault to VPS using SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USER: ${{ secrets.VPS_USERNAME }}
        run: |
          # Tạo SSH key file
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Tạo known_hosts để tránh cảnh báo khi kết nối lần đầu
          ssh-keyscan -t rsa $SSH_HOST >> ~/.ssh/known_hosts
          
          # Tạo deployment script với nội dung cụ thể
          cat > deploy_vault_script.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Login to GHCR
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          
          # Pull latest image
          docker pull ${{ env.IMAGE_NAME }}:latest
          
          # Stop and remove existing container
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true
          
          # Run new container
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p 8200:8200 \
            --restart always \
            -e VAULT_SECRET_1="${{ secrets.VAULT_SECRET_1 }}" \
            -e VAULT_SECRET_2="${{ secrets.VAULT_SECRET_2 }}" \
            -e VAULT_SECRET_3="${{ secrets.VAULT_SECRET_3 }}" \
            ${{ env.IMAGE_NAME }}:latest
          
          # Clean up old images
          docker image prune -af --force
          
          echo "Deployment completed successfully!"
          EOF
          
          # Transfer script to VPS
          scp -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deploy_vault_script.sh $SSH_USER@$SSH_HOST:/tmp/deploy_vault_script.sh
          
          # Grant permissions and execute script on VPS
          ssh -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "chmod +x /tmp/deploy_vault_script.sh && /tmp/deploy_vault_script.sh"
          
          # Remove key after completion
          rm -f ~/.ssh/id_rsa
