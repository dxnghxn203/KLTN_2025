pipeline {
    agent any

    tools {
        nodejs 'Node20'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: 'hxn203',
                    url: 'git@github.com:dxnghxn203/KLTN_2025.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('frontend') {
                    script {
                        def packageChanged = sh(script: 'git diff --name-only HEAD~1 HEAD | grep "frontend/package.json" || true', returnStatus: true) == 0
                        def yarnLockChanged = sh(script: 'git diff --name-only HEAD~1 HEAD | grep "frontend/yarn.lock" || true', returnStatus: true) == 0
                        if (packageChanged || yarnLockChanged) {
                            sh 'yarn install --frozen-lockfile'
                        } else {
                            echo 'No changes in package.json or yarn.lock, skipping yarn install'
                        }
                    }
                }
            }
        }

        stage('Build') {
            steps {
                dir('frontend') {
                    sh 'yarn build'
                }
            }
        }

        stage('Deploy') {
            when { branch 'main' }
            steps {
                sshagent(['ec2-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ec2-user@46.137.203.192 '\
                            cd ~/app && \
                            docker-compose stop frontend && \
                            docker-compose rm -f frontend && \
                            echo "FRONTEND_IMAGE=frontend:${BUILD_NUMBER}" > .env && \
                            docker-compose up -d frontend'
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
