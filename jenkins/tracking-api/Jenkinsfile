pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: 'hxn203',
                    url: 'git@github.com:dxnghxn203/KLTN_2025.git'
            }
        }

        stage('Setup Environment') {
            steps {
                dir('tracking-manager/packages/tracking-api') {
                    script {
                        def requirementsChanged = sh(script: 'git diff --name-only HEAD~1 HEAD | grep "tracking-manager/packages/tracking-api/requirements.txt" || true', returnStatus: true) == 0
                        if (requirementsChanged) {
                            echo 'No changes in requirements.txt, skipping pip install'
                        } else {
                            echo 'requirements.txt has changed, running pip install'
                            sh '''
                                sudo apt-get update
                                sudo apt-get install -y python3.11-venv
                                python3 -m venv venv
                                . venv/bin/activate
                                pip install --no-cache-dir -r requirements.txt
                            '''
                        }
                    }
                }
            }
        }

        stage('Test') {
            steps {
                dir('tracking-manager/packages/tracking-api') {
                    sh '''
                        . venv/bin/activate
                        mkdir -p test-results
                        python -m pytest --junitxml=test-results/junit.xml
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                dir('tracking-manager/packages/tracking-api') {
                    script {
                        docker.build("tracking-api:${BUILD_NUMBER}", ".")
                    }
                }
            }
        }

        stage('Deploy') {
            when { branch 'main' }
            steps {
                sshagent(['ec2-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ec2-user@46.137.203.192 '\
                            cd ~/app && \
                            docker-compose stop tracking-api && \
                            docker-compose rm -f tracking-api && \
                            echo "TRACKING_API_IMAGE=tracking-api:${BUILD_NUMBER}" >> .env && \
                            docker-compose up -d tracking-api'
                    """
                }
            }
        }
    }

    post {
        always {
            junit 'tracking-manager/packages/tracking-api/test-results/junit.xml'
            cleanWs()
        }
    }
}
